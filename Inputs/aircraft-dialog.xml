<?xml version="1.0"?>

<!-- HUP-Retriever
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License as
 published by the Free Software Foundation; either version 2 of the
 License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.
-->

<PropertyList>
  <nasal>
    <open>
      # Cargo Hauling option
      var p = getprop("sim/gui/dialogs/aicargo-dialog/connection");
      setprop("/sim/model/HUP-Retriever/cargo_connection_flag_0", 0);
      setprop("/sim/model/HUP-Retriever/cargo_connection_flag_1", 0);
      setprop("/sim/model/HUP-Retriever/cargo_connection_flag_" ~ p, 1);

      # Long Line option
      p = getprop("sim/gui/dialogs/aicargo-dialog/longline");
      setprop("/sim/model/HUP-Retriever/longline_flag_0",0);
			setprop("/sim/model/HUP-Retriever/longline_flag_1",0);
      setprop("/sim/model/HUP-Retriever/longline_flag_" ~ p, 1);

      # Hitch/Winch option
      p = getprop("sim/gui/dialogs/aicargo-dialog/connector");
      setprop("/sim/model/HUP-Retriever/connector_flag_0",0);
			setprop("/sim/model/HUP-Retriever/connector_flag_1",0);
      setprop("/sim/model/HUP-Retriever/connector_flag_" ~ p, 1);

      # Rescue Rope type option
      p = getprop("sim/gui/dialogs/aicargo-dialog/rescue");
      setprop("/sim/model/HUP-Retriever/rescue_flag_0",0);
			setprop("/sim/model/HUP-Retriever/rescue_flag_1",0);
      setprop("/sim/model/HUP-Retriever/rescue_flag_2",0);
      setprop("/sim/model/HUP-Retriever/rescue_flag_" ~ p, 1);
    </open>
  </nasal>

  <name>aircraft-dialog</name>
	<layout>vbox</layout>
	<resizable>true</resizable>
	<default-padding>3</default-padding>

  <group>
    <layout>hbox</layout>
		<default-padding>1</default-padding>
    <empty><stretch>true</stretch></empty>
    <text>
      <label>Aircraft Options</label>
    </text>
    <empty><stretch>true</stretch></empty>

    <button>
      <legend/>
      <key>Esc</key>
      <pref-width>16</pref-width>
      <pref-height>16</pref-height>
      <binding>
        <command>dialog-close</command>
      </binding>
    </button>
  </group>

  <hrule/>

  <group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Fold Blades</label>
      <property>fdm/jsbsim/fcs/wing-fold-cmd</property>
      <live>true</live>
      <binding>
        <command>nasal</command>
        <script>
          var p = "fdm/jsbsim/fcs/wing-fold-cmd";
          setprop(p, var i = !getprop(p));
          gui.popupTip("Blades " ~ (i ? " Folded" : "Unfolded"));
        </script>
      </binding>
    </checkbox>
  </group>

  <hrule/>

  <!--group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Shadow</label>
      <property>sim/model/HUP-Retriever/effects/shadow</property>
      <live>true</live>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/model/HUP-Retriever/effects/shadow";
          setprop(p, var i = !getprop(p));
          gui.popupTip("Aircraft shadow " ~ (i ? "On" : "Off"));
        </script>
      </binding>
    </checkbox>
  </group-->
  <group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Show Particle Effects</label>
      <property>sim/model/HUP-Retriever/effects/particles/enabled</property>
      <live>true</live>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/model/HUP-Retriever/effects/particles/enabled";
          setprop(p, var i = !getprop(p));
          gui.popupTip("Particle effects " ~ (i ? "On" : "Off"));
        </script>
      </binding>
    </checkbox>
  </group>
  <!--group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Human models</label>
      <property>/sim/model/occupants</property>
      <live>true</live>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </checkbox>
  </group>
  <group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Persistent Position</label>
      <property>sim/model/HUP-Retriever/persistent</property>
      <live>true</live>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/model/HUP-Retriever/persistent";
          setprop(p, var i = !getprop(p));
          gui.popupTip("Persistent position " ~ (i ? "On" : "Off"));
        </script>
      </binding>
    </checkbox>
  </group>

  <hrule/>

  <group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Equip Garmin 196 GPS</label>
      <property>/sim/model/garmin196-visible</property>
      <live>true</live>
      <binding>
          <command>dialog-apply</command>
      </binding>
    </checkbox>
  </group-->

  <hrule/>

  <group>
	  <layout>table</layout>

	  <text>
		  <label>Rescue Mission</label>
		  <halign>left</halign>
		  <row>2</row>
	    <col>0</col>
	  </text>

    <checkbox>
      <label>Open Floor Hatch</label>
      <halign>left</halign>
      <row>2</row>
	    <col>3</col>
      <property>fdm/jsbsim/animation/cockpit-hatch-cmd-norm</property>
      <live>true</live>
      <binding>
        <command>nasal</command>
        <script>
          var p = "fdm/jsbsim/animation/cockpit-hatch-cmd-norm";
          setprop(p, var i = !getprop(p));
          gui.popupTip("Floor Hatch " ~ (i ? "Opened" : "Closed"));

					var rm = getprop("/sim/gui/dialogs/aicargo-dialog/rescue");
          if (rm == 0) {
            setprop("/sim/model/rescue", 1);
            setprop("fdm/jsbsim/animation/rescue/rescue-lift-sim", 1);
            setprop("fdm/jsbsim/animation/mission-winch-pos-norm", 1);
          }
        </script>
      </binding>
    </checkbox>

		<radio>
      <row>3</row>
		  <col>0</col>
			<halign>left</halign>
			<label>Classic</label>
			<property>sim/model/HUP-Retriever/rescue_flag_0</property>
			<live>true</live>
			<enable>
				<not>
					<property>/sim/freeze/replay-state</property>
				</not>
			</enable>
      <binding>
				<command>dialog-apply</command>
			</binding>
			<binding>
				<command>nasal</command>
				<script>
          setprop("/sim/model/rescue", 1);
					setprop("/sim/gui/dialogs/aicargo-dialog/rescue", 0);
          setprop("sim/model/HUP-Retriever/rescue_flag_0",1);
					setprop("sim/model/HUP-Retriever/rescue_flag_1",0);
          setprop("sim/model/HUP-Retriever/rescue_flag_2",0);

          var pa = getprop("fdm/jsbsim/animation/cockpit-hatch-cmd-norm");
          if (1 > pa) gui.popupTip("Hatch door must be opened to deploy the winch!");
          setprop("fdm/jsbsim/animation/rescue/rescue-lift-sim", 1);
          setprop("fdm/jsbsim/animation/mission-winch-pos-norm", 1);

          #rescue.rope_manager.stop();
        </script>
      </binding>
		</radio>

		<radio>
      <row>4</row>
		  <col>0</col>
			<halign>left</halign>
			<label>Flexible rope</label>
			<property>sim/model/HUP-Retriever/rescue_flag_1</property>
			<live>true</live>
			<enable>
				<not>
					<property>/sim/freeze/replay-state</property>
				</not>
			</enable>
      <binding>
				<command>dialog-apply</command>
			</binding>
			<binding>
				<command>nasal</command>
				<script>
          setprop("/sim/model/rescue", 0);
					setprop("/sim/gui/dialogs/aicargo-dialog/rescue", 1);
          setprop("sim/model/HUP-Retriever/rescue_flag_0",0);
					setprop("sim/model/HUP-Retriever/rescue_flag_1",1);
          setprop("sim/model/HUP-Retriever/rescue_flag_2",0);

          setprop("fdm/jsbsim/animation/rescue/rescue-lift-sim", 0);
          setprop("fdm/jsbsim/animation/mission-winch-pos-norm", 0);

          #rescue.rope_manager.start();
        </script>
      </binding>
		</radio>

		<radio>
      <row>5</row>
		  <col>0</col>
			<halign>left</halign>
			<label>None</label>
			<property>sim/model/HUP-Retriever/rescue_flag_2</property>
			<live>true</live>
			<enable>
				<not>
					<property>/sim/freeze/replay-state</property>
				</not>
			</enable>
      <binding>
				<command>dialog-apply</command>
			</binding>
			<binding>
				<command>nasal</command>
				<script>
          setprop("/sim/model/rescue", 0);
					setprop("/sim/gui/dialogs/aicargo-dialog/rescue", 2);
          setprop("sim/model/HUP-Retriever/rescue_flag_0",0);
					setprop("sim/model/HUP-Retriever/rescue_flag_1",0);
          setprop("sim/model/HUP-Retriever/rescue_flag_2",1);

          setprop("fdm/jsbsim/animation/rescue/rescue-lift-sim", 0);
          setprop("fdm/jsbsim/animation/mission-winch-pos-norm", 0);

          #rescue.rope_manager.start();
        </script>
      </binding>
		</radio>
  </group>

	<text>
		<label>Cargo Connection</label>
		<halign>center</halign>
	</text>

	<group>
		<layout>hbox</layout>
		<radio>
			<halign>left</halign>
			<label>Hard Docked</label>
			<property>sim/model/HUP-Retriever/cargo_connection_flag_0</property>
			<live>true</live>
			<enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <not>
					  <property>/sim/cargo/cargo-on-hook</property>
				  </not>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/connection";
          setprop(p, var i = 0);
          gui.popupTip("Cargo connection " ~ (i ? "Long Line" : "Hard Docked"));
          setprop("sim/model/HUP-Retriever/cargo_connection_flag_0",1);
					setprop("sim/model/HUP-Retriever/cargo_connection_flag_1",0);
        </script>
      </binding>
		</radio>
		<radio>
			<halign>left</halign>
			<label>Long Line</label>
			<property>sim/model/HUP-Retriever/cargo_connection_flag_1</property>
			<live>true</live>
			<enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <not>
					  <property>/sim/cargo/cargo-on-hook</property>
				  </not>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/connection";
          setprop(p, var i = 1);
          gui.popupTip("Cargo connection " ~ (i ? "Long Line" : "Hard Docked"));
          setprop("sim/model/HUP-Retriever/cargo_connection_flag_0",0);
					setprop("sim/model/HUP-Retriever/cargo_connection_flag_1",1);
          setprop("sim/model/firetank/enabled", 0);
        </script>
      </binding>
		</radio>
	</group>
	<group>
		<layout>hbox</layout>
		<radio>
			<halign>left</halign>
			<label>Rope</label>
			<property>sim/model/HUP-Retriever/longline_flag_0</property>
			<live>true</live>
			<enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <property>/sim/gui/dialogs/aicargo-dialog/connection</property>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/longline";
          setprop(p, var i = 0);
          gui.popupTip("Line type " ~ (i ? "Cable" : "Rope"));
          setprop("sim/model/HUP-Retriever/longline_flag_0",1);
					setprop("sim/model/HUP-Retriever/longline_flag_1",0);
        </script>
      </binding>
		</radio>
		<radio>
			<halign>left</halign>
			<label>Cable</label>
			<property>sim/model/HUP-Retriever/longline_flag_1</property>
			<live>true</live>
      <enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <property>/sim/gui/dialogs/aicargo-dialog/connection</property>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/longline";
          setprop(p, var i = 1);
          gui.popupTip("Line type " ~ (i ? "Cable" : "Rope"));
          setprop("sim/model/HUP-Retriever/longline_flag_0",0);
					setprop("sim/model/HUP-Retriever/longline_flag_1",1);
        </script>
      </binding>
		</radio>
	</group>
	<group>
		<layout>hbox</layout>
		<radio>
			<halign>left</halign>
			<label>Hitch</label>
			<property>sim/model/HUP-Retriever/connector_flag_0</property>
			<live>true</live>
			<enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <property>/sim/gui/dialogs/aicargo-dialog/connection</property>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/connector";
          setprop(p, var i = 0);
          gui.popupTip("Connector type " ~ (i ? "Winch" : "Hitch"));
          setprop("sim/model/HUP-Retriever/connector_flag_0",1);
					setprop("sim/model/HUP-Retriever/connector_flag_1",0);
        </script>
      </binding>
		</radio>
		<radio>
			<halign>left</halign>
			<label>Winch</label>
			<property>sim/model/HUP-Retriever/connector_flag_1</property>
			<live>true</live>
      <enable>
        <and>
				  <not>
					  <property>/sim/freeze/replay-state</property>
				  </not>
          <property>/sim/gui/dialogs/aicargo-dialog/connection</property>
          <equals>
            <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
            <value>1</value>
          </equals>
        </and>
			</enable>
      <binding>
        <command>nasal</command>
        <script>
          var p = "sim/gui/dialogs/aicargo-dialog/connector";
          setprop(p, var i = 1);
          gui.popupTip("Connector type " ~ (i ? "Winch" : "Hitch"));
          setprop("sim/model/HUP-Retriever/connector_flag_0",0);
					setprop("sim/model/HUP-Retriever/connector_flag_1",1);
          p = getprop("fdm/jsbsim/animation/cockpit-hatch-cmd-norm");
          if (1 > p) gui.popupTip("Hatch door must be opened to deploy the winch!");
        </script>
      </binding>
		</radio>
	</group>

  <group>
    <layout>hbox</layout>
    <padding>6</padding>
    <checkbox>
      <halign>left</halign>
      <label>Rope Collides With Cargo's top Surface</label>
      <property>/sim/gui/dialogs/aicargo-dialog/alt-origin</property>
      <live>true</live>
      <enable>
          <and>
				    <not>
					    <property>/sim/freeze/replay-state</property>
				    </not>
            <property>/sim/gui/dialogs/aicargo-dialog/connection</property>
            <equals>
              <property>/sim/gui/dialogs/aicargo-dialog/rescue</property>
              <value>1</value>
            </equals>
          </and>
			  </enable>
      <binding>
        <command>dialog-apply</command>
      </binding>
    </checkbox>
  </group>

  <hrule/>

  <!-- Button bar -->
  <group>
    <layout>hbox</layout>
    <default-padding>6</default-padding>
    <empty><stretch>true</stretch></empty>
    <button>
      <legend>Close</legend>
      <equal>true</equal>
      <key>Esc</key>
      <default>true</default>
      <binding>
        <command>dialog-close</command>
      </binding>
    </button>
    <empty><stretch>true</stretch></empty>
  </group>

</PropertyList>
